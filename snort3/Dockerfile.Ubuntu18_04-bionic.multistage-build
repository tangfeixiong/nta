# Inspired
# - https://www.snort.org/documents/snort-3-on-ubuntu-18-19
# - https://github.com/mosesrenegade/snort3-docker/blob/master/Dockerfile
# - https://github.com/jhunt/docker-snort3/blob/master/Dockerfile
# - https://github.com/kubernetes/ingress-nginx/blob/master/images/nginx/rootfs/Dockerfile
# - https://docs.docker.com/develop/develop-images/multistage-build/

FROM ubuntu:18.04 as builder

COPY ./build-dep.sh /build.sh 

RUN set -xe; \
    `# sed -i 's%http://archive.ubuntu.com/%http://cn.archive.ubuntu.com/%g;s%http://security.ubuntu.com/%http://cn.archive.ubuntu.com/%g' /etc/apt/sources.list;` \ 
    `# sed -i 's%http://archive.ubuntu.com/%http://mirrors.aliyun.com/ubuntu/%g;s%http://security.ubuntu.com/%http://mirrors.aliyun.com/ubuntu/%g' /etc/apt/sources.list;` \
    `# sed -i 's%http://archive.ubuntu.com/%http://mirrors.yun-idc.com/ubuntu/%g' /etc/apt/sources.list;` \
    `# sed -i 's%http://archive.ubuntu.com/%http://mirrors.tuna.tsinghua.edu.cn/ubuntu/%g' /etc/apt/sources.list;` \
	\
    /build.sh init --apt-mirror http://mirrors.tuna.tsinghua.edu.cn/ubuntu/

RUN /build.sh luajit2
RUN /build.sh safeclib
RUN /build.sh pcre
RUN /build.sh gperftools
RUN /build.sh ragel
RUN /build.sh libpcap
RUN /build.sh hyperscan
RUN /build.sh libdnet
RUN /build.sh hwloc
RUN /build.sh flatbuffers
RUN /build.sh libdaq

# Just avoid to re-build dependency

COPY ./build.sh /

RUN /build.sh snort3; \
    \
    /build.sh clean

# Use a multi-stage build
FROM ubuntu:18.04

LABEL maintainer="tangfeixiong <tangfx128@gmail.com>" \
    project="snort3" \
    repository="https://github.com/snort3/snort3" \
	tags="docker19.03.6 ubuntu18.04.1 snort3.0.3-5"

ENV PATH=$PATH:/usr/local/luajit/bin:/usr/local/nginx/sbin:/usr/local/nginx/bin

ENV LUA_PATH="/urs/local/snort/include/snort/lua/\?.lua\;/usr/local/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/?.lua;/usr/local/lib/lua/?.lua;;"
ENV LUA_CPATH="/usr/local/lib/lua/?/?.so;/usr/local/lib/lua/?.so;;"
ENV SNORT_LUA_PATH=/usr/local/snort/etc/snort

COPY --from=builder /usr/local /usr/local

RUN set -xe; \
    # sed -i 's%http://archive.ubuntu.com/%http://cn.archive.ubuntu.com/%g;s%http://security.ubuntu.com/%http://cn.archive.ubuntu.com/%g' /etc/apt/sources.list;
    # sed -i 's%http://archive.ubuntu.com/%http://mirrors.aliyun.com/ubuntu/%g' /etc/apt/sources.list;
    # sed -i 's%http://archive.ubuntu.com/%http://mirrors.tuna.tsinghua.edu.cn/ubuntu/%g' /etc/apt/sources.list; 
	apt-get update; \
    # apt-get upgrade;
    apt-get autoclean \
    && apt-get install -y --no-install-recommends \
        openssl \
        libpcre++0v5 \
        zlib1g \
        libgeoip1 \
        libdumbnet1 \
        liblzma5 \
        libsqlite3-0 \
        libyajl2 \
        liblmdb0 \
        libxml2 \
        libmaxminddb0 \
        libunwind8 \
        libyaml-cpp0.5v5 \
        \
        libmnl0 \
        libnetfilter-queue1 \
        \
        uuid \
        \
        flex bison \
        patch \
        dumb-init \
        tzdata \
        nano vim \
        \
        curl ca-certificates \
        ethtool iproute2 iptables iputils-ping netcat \
        tcpdump wget; \ 
    apt-get autoremove; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*
	
#RUN set -xe; \
#  # && ln -s /usr/local/nginx/sbin/nginx /sbin/nginx 
#  && group1=$(cat /etc/group | grep www-data); \
#     if [ -z $group1 ]; then addgroup --system --gid 101 www-data; fi \
#  && user1=$(cat /etc/passwd | grep www-data); \
#     if [ -z $user1 ]; then adduser --system --uid 101 --home /usr/local/nginx \
#    --shell /sbin/nologin --ingroup www-data www-data; fi \
#  && /bin/bash -eu -c ' \
#    writeDirs=( \
#      /var/log/nginx \
#      /var/lib/nginx/body \
#      /var/lib/nginx/fastcgi \
#      /var/lib/nginx/proxy \
#      /var/lib/nginx/scgi \
#      /var/lib/nginx/uwsgi \
#      /var/log/audit \
#  ); \
#  for dir in "${writeDirs[@]}"; do \
#    mkdir -p ${dir}; \
#    chown -R www-data.www-data ${dir}; \
#  done'
#
#EXPOSE 80 443

RUN set -xe; \
    mkdir -p /var/log/snort; \
    mkdir -p /etc/snort; \
    mkdir -p /etc/rules; \
	mkdir -p /etc/builtin_rules; \
	mkdir -p /etc/so_rules; \
	mkdir -p /etc/lists; \
    ln -s /usr/local/snort/bin/snort /bin/snort; \
    cp -r /usr/local/snort/etc/snort /usr/local/etc/; \
    echo -e '#!/bin/sh \n \
exec /usr/local/snort/bin/snort -c /etc/snort.lua "$@" \
' >>/entrypoint.sh && \
	  chmod a+x /entrypoint.sh

WORKDIR /usr/local/etc/snort

VOLUME ["/var/log/snort", "/etc/rules", "/etc/builtin_rules", "/etc/so_rules", "/etc/lists"]

CMD ["snort", "-d", "-i", "eth0", "-c", "/user/local/etc/snort/snort.lua", "-R", "/usr/local/etc/snort3-community-rules/snort3-community.rules", "--rule-path", "/usr/local/etc/rules"]
# CMD ["-i", "eth0"]
# ENTRYPOINT ["/entrypoint.sh"]
