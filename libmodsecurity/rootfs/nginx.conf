
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

    load_module /etc/nginx/modules/ngx_http_modsecurity_module.so;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

            modsecurity on;
            modsecurity_transaction_id "default-$request_id";

        location / {
            root   html;
            index  index.html index.htm;

                modsecurity_rules_file /usr/local/etc/nginx/main.conf;

                ### main.conf
	            modsecurity_rules '
                    #SecRuleEngine DetectionOnly
	                SecRuleEngine On
					
	                SecDebugLog /var/log/modsec_debug.log
	                SecDebugLogLevel 9
					
	                #SecRuleRemoveById 10
	                
                    #SecAuditEngine RelevantOnly
                    SecAuditEngine On
					
	                SecAuditLogType Serial
	                #SecAuditLog /var/log/modsec_audit.log
	                SecAuditLog /dev/stdout
	                SecAuditLogFormat JSON					
	                #SecAuditLogType concurrent
	                SecAuditLogStorageDir /var/log/audit
	
	                ### rules 
	                SecRule REQUEST_URI "@streq /index.html" "id:1234567,phase:1,t:lowercase,nolog,auditlog,pass"
	                # SecRule REQUEST_URI "@rx \w*/index\S*$" "id:1234567,phase:1,t:lowercase,nolog,auditlog,drop,status:503"
                    # SecRule ARGS:testname "@contains malicious" "id:1234567,deny,log,auditlog,status:403"
	            ';

        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
